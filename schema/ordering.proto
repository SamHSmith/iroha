syntax = "proto3";
package iroha.ordering.proto;

import "transaction.proto";
import "proposal.proto";
import "endpoint.proto";
import "google/protobuf/empty.proto";

service OrderingGateTransportGrpc {
  rpc onProposal (protocol.Proposal) returns (google.protobuf.Empty);
}

service OrderingServiceTransportGrpc {
  rpc onBatch (iroha.protocol.TxList) returns (google.protobuf.Empty);
}

message ProposalRound {
  uint64 block_round = 1;
  uint32 reject_round = 2;
}

message BatchesRequest {
  repeated protocol.Transaction transactions = 1;
}

message ProposalRequest {
  ProposalRound round = 1;
  oneof optional_ref_proposal {
    bytes ref_proposal_hash = 2;
  }
}

message ProposalRequest_v2 {
  ProposalRound round = 1;
  oneof optional_bloom_filter {
    bytes bloom_filter = 2;
  }
}

message ProposalResponse_v2 {
  bytes bloom_filter = 1;
  protocol.Proposal proposal = 2;
  oneof optional_proposal_hash {
    bytes proposal_hash = 3;
  }
}

message ProposalResponse {
  oneof optional_proposal {
    protocol.Proposal proposal = 1;
    bytes same_proposal_hash = 2;
 }
}

service OnDemandOrdering {
  rpc SendBatches(BatchesRequest) returns (google.protobuf.Empty);
  rpc RequestProposal(ProposalRequest) returns (ProposalResponse);
  rpc RequestProposal_v2(ProposalRequest_v2) returns (ProposalResponse_v2);
}
